import{e as k,f as y,h as p,k as d,l as m,n as b}from"./chunk-D3OC6ZHD.js";var w={url:"",deserializer:u=>JSON.parse(u.data),serializer:u=>JSON.stringify(u)},x="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",l=class u extends m{constructor(t,r){if(super(),this._socket=null,t instanceof p)this.destination=r,this.source=t;else{let s=this._config=Object.assign({},w);if(this._output=new d,typeof t=="string")s.url=t;else for(let n in t)t.hasOwnProperty(n)&&(s[n]=t[n]);if(!s.WebSocketCtor&&WebSocket)s.WebSocketCtor=WebSocket;else if(!s.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new b}}lift(t){let r=new u(this._config,this.destination);return r.operator=t,r.source=this,r}_resetState(){this._socket=null,this.source||(this.destination=new b),this._output=new d}multiplex(t,r,s){let n=this;return new p(o=>{try{n.next(t())}catch(c){o.error(c)}let e=n.subscribe({next:c=>{try{s(c)&&o.next(c)}catch(i){o.error(i)}},error:c=>o.error(c),complete:()=>o.complete()});return()=>{try{n.next(r())}catch(c){o.error(c)}e.unsubscribe()}})}_connectSocket(){let{WebSocketCtor:t,protocol:r,url:s,binaryType:n}=this._config,o=this._output,e=null;try{e=r?new t(s,r):new t(s),this._socket=e,n&&(this._socket.binaryType=n)}catch(i){o.error(i);return}let c=new k(()=>{this._socket=null,e&&e.readyState===1&&e.close()});e.onopen=i=>{let{_socket:h}=this;if(!h){e.close(),this._resetState();return}let{openObserver:S}=this._config;S&&S.next(i);let _=this.destination;this.destination=y.create(a=>{if(e.readyState===1)try{let{serializer:f}=this._config;e.send(f(a))}catch(f){this.destination.error(f)}},a=>{let{closingObserver:f}=this._config;f&&f.next(void 0),a&&a.code?e.close(a.code,a.reason):o.error(new TypeError(x)),this._resetState()},()=>{let{closingObserver:a}=this._config;a&&a.next(void 0),e.close(),this._resetState()}),_&&_ instanceof b&&c.add(_.subscribe(this.destination))},e.onerror=i=>{this._resetState(),o.error(i)},e.onclose=i=>{e===this._socket&&this._resetState();let{closeObserver:h}=this._config;h&&h.next(i),i.wasClean?o.complete():o.error(i)},e.onmessage=i=>{try{let{deserializer:h}=this._config;o.next(h(i))}catch(h){o.error(h)}}}_subscribe(t){let{source:r}=this;return r?r.subscribe(t):(this._socket||this._connectSocket(),this._output.subscribe(t),t.add(()=>{let{_socket:s}=this;this._output.observers.length===0&&(s&&(s.readyState===1||s.readyState===0)&&s.close(),this._resetState())}),t)}unsubscribe(){let{_socket:t}=this;t&&(t.readyState===1||t.readyState===0)&&t.close(),this._resetState(),super.unsubscribe()}};function g(u){return new l(u)}export{g as a};
