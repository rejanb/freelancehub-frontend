import{a as V}from"./chunk-HKVI4RXP.js";import{a as z}from"./chunk-LER6AJTK.js";import{a as L}from"./chunk-TSMETG7O.js";import{a as H,b as J}from"./chunk-BKKMXYAV.js";import"./chunk-KJMQ5L5H.js";import{c as $,d as U}from"./chunk-NULHEHFH.js";import"./chunk-KEGNGRCI.js";import"./chunk-4YRY4IP2.js";import{c as O,f as B,i as F,t as P}from"./chunk-LBDSJBCK.js";import{La as j,Na as x,Oa as A,Pa as R,c as D,ra as u}from"./chunk-SFRASIIN.js";import{Ic as W,Kb as r,Lb as f,Qb as v,Qc as w,Ra as n,Rb as b,Rc as E,Sa as d,Sb as S,Tb as T,Ub as M,Vc as I,ca as h,dc as y,eb as k,ec as _,fc as N,hb as m,ib as g,qb as t,rb as o,sb as C,xb as p}from"./chunk-D3OC6ZHD.js";function G(c,s){if(c&1&&(t(0,"div",13)(1,"small"),r(2),y(3,"date"),o(),C(4,"br"),t(5,"pre"),r(6),y(7,"json"),o()()),c&2){let i=s.$implicit;g("background-color","#f0f0f0"),n(2),f(N(3,4,i.timestamp,"medium")),n(4),f(_(7,7,i.data))}}var q=class c{constructor(s,i,e,l){this.notificationService=s;this.tokenService=i;this.http=e;this.messageService=l}testMessage="Hello, this is a test notification!";selectedType="info";isConnected=!1;receivedMessages=[];notificationTypes=[{label:"Info",value:"info"},{label:"Success",value:"success"},{label:"Warning",value:"warning"},{label:"Error",value:"error"},{label:"Job",value:"job"},{label:"Message",value:"message"}];socket$;currentUser;ngOnInit(){this.currentUser=this.tokenService.getCurrentUser()}ngOnDestroy(){this.disconnectWebSocket()}connectWebSocket(){if(!this.currentUser){this.messageService.add({severity:"error",summary:"Error",detail:"Please login first"});return}let s=this.tokenService.getToken();if(!s){this.messageService.add({severity:"error",summary:"Error",detail:"No authentication token found"});return}let i=`ws://localhost:8000/ws/notifications/${this.currentUser.id}/?token=${s}`;this.socket$=V({url:i,deserializer:e=>JSON.parse(e.data),serializer:e=>JSON.stringify(e)}),this.socket$.subscribe({next:e=>{console.log("WebSocket message received:",e),this.receivedMessages.unshift({timestamp:new Date,data:e}),this.isConnected=!0,this.messageService.add({severity:"info",summary:"WebSocket",detail:"Message received"})},error:e=>{console.error("WebSocket error:",e),this.isConnected=!1,this.messageService.add({severity:"error",summary:"WebSocket Error",detail:"Connection failed"})},complete:()=>{console.log("WebSocket connection closed"),this.isConnected=!1}}),setTimeout(()=>{this.socket$&&!this.socket$.closed&&this.socket$.next({type:"ping"})},1e3)}disconnectWebSocket(){this.socket$&&(this.socket$.complete(),this.isConnected=!1)}sendTestNotification(){let s={message:this.testMessage,type:this.selectedType};this.http.post("http://localhost:8000/api/notifications/test/",s).subscribe({next:i=>{console.log("Test notification sent:",i),this.messageService.add({severity:"success",summary:"Success",detail:"Test notification sent"})},error:i=>{console.error("Error sending test notification:",i),this.messageService.add({severity:"error",summary:"Error",detail:"Failed to send test notification"})}})}static \u0275fac=function(i){return new(i||c)(d(z),d(L),d(D),d(u))};static \u0275cmp=h({type:c,selectors:[["app-notification-test"]],standalone:!0,features:[T([u]),M],decls:27,vars:9,consts:[[1,"grid"],[1,"col-12"],[1,"field"],["for","message"],["pInputText","","id","message",1,"w-full",3,"ngModelChange","ngModel"],["for","type"],["id","type","optionLabel","label","optionValue","value",1,"w-full",3,"ngModelChange","options","ngModel"],[1,"flex","gap-2","mb-4"],["pButton","","label","Connect WebSocket",3,"click","disabled"],["pButton","","label","Disconnect",3,"click","disabled"],["pButton","","label","Send Test Notification","severity","success",3,"click"],[1,"border-1","border-round","p-3","mt-2",2,"max-height","300px","overflow-y","auto"],["class","mb-2 p-2 border-round",3,"background-color",4,"ngFor","ngForOf"],[1,"mb-2","p-2","border-round"]],template:function(i,e){i&1&&(t(0,"div",0)(1,"div",1)(2,"p-card")(3,"h3"),r(4,"Notification WebSocket Test"),o(),t(5,"div",2)(6,"label",3),r(7,"Test Message"),o(),t(8,"input",4),S("ngModelChange",function(a){return b(e.testMessage,a)||(e.testMessage=a),a}),o()(),t(9,"div",2)(10,"label",5),r(11,"Notification Type"),o(),t(12,"p-dropdown",6),S("ngModelChange",function(a){return b(e.selectedType,a)||(e.selectedType=a),a}),o()(),t(13,"div",7)(14,"button",8),p("click",function(){return e.connectWebSocket()}),o(),t(15,"button",9),p("click",function(){return e.disconnectWebSocket()}),o(),t(16,"button",10),p("click",function(){return e.sendTestNotification()}),o()(),t(17,"div",2)(18,"label"),r(19,"Connection Status: "),t(20,"span"),r(21),o()()(),t(22,"div",2)(23,"label"),r(24,"Received Messages:"),o(),t(25,"div",11),k(26,G,8,9,"div",12),o()()()()()),i&2&&(n(8),v("ngModel",e.testMessage),n(4),m("options",e.notificationTypes),v("ngModel",e.selectedType),n(2),m("disabled",e.isConnected),n(),m("disabled",!e.isConnected),n(5),g("color",e.isConnected?"green":"red"),n(),f(e.isConnected?"Connected":"Disconnected"),n(5),m("ngForOf",e.receivedMessages))},dependencies:[I,W,E,w,P,O,B,F,x,j,R,A,U,$,J,H],encapsulation:2})};export{q as NotificationTestComponent};
