import{a as l,c as d,k as p,p as u,ra as g}from"./chunk-SFRASIIN.js";import{U as b,Z as n,m as c}from"./chunk-D3OC6ZHD.js";var f=class r{constructor(e,o,i){this.http=e;this.messageService=o;this.router=i}baseUrl=`${u.API_URL}notifications/`;wsUrl=u.WS_URL;socket$;socket;isConnected=!1;notificationsSubject=new c([]);unreadCountSubject=new c(0);notifications$=this.notificationsSubject.asObservable();unreadCount$=this.unreadCountSubject.asObservable();isWebSocketConnected(){return this.isConnected&&this.socket?.readyState===WebSocket.OPEN}connectWebSocket(e,o){this.socket&&(console.log("Closing existing WebSocket connection"),this.socket.close());let i=`ws://localhost:8000/ws/notifications/?token=${o}`;console.log("Connecting to WebSocket:",i),this.socket=new WebSocket(i),this.socket.onopen=t=>{console.log("WebSocket connected successfully"),this.isConnected=!0},this.socket.onmessage=t=>{try{let s=JSON.parse(t.data);console.log("WebSocket message received:",s),s.type==="notification"&&this.addNewNotification(s.data)}catch(s){console.error("Error parsing WebSocket message:",s)}},this.socket.onclose=t=>{console.log("WebSocket disconnected",t),this.isConnected=!1,this.socket=void 0,t.wasClean||setTimeout(()=>{console.log("Attempting to reconnect WebSocket..."),this.connectWebSocket(e,o)},5e3)},this.socket.onerror=t=>{console.error("WebSocket error:",t),this.isConnected=!1}}disconnectWebSocket(){this.socket&&(console.log("Disconnecting WebSocket"),this.socket.close(1e3,"App closing"),this.socket=void 0,this.isConnected=!1)}getNotifications(e){let o=new l;return o=o.set("all","true"),e&&Object.keys(e).forEach(i=>{let t=e[i];t!=null&&(o=o.set(i,t.toString()))}),this.http.get(this.baseUrl,{params:o})}getPaginatedNotifications(e=1,o=50,i){let t=new l().set("page",e.toString()).set("page_size",o.toString());return i&&Object.keys(i).forEach(s=>{let a=i[s];a!=null&&(t=t.set(s,a.toString()))}),this.http.get(this.baseUrl,{params:t})}markAsRead(e){return this.http.post(`${this.baseUrl}${e}/read/`,{})}markAllAsRead(){return this.http.post(`${this.baseUrl}mark-all-read/`,{})}deleteNotification(e){return this.http.delete(`${this.baseUrl}${e}/`)}clearAllNotifications(){return this.http.delete(`${this.baseUrl}clear-all/`)}getUnreadCount(){return this.http.get(`${this.baseUrl}unread-count/`)}testNotification(){return this.http.post(`${this.baseUrl}test/`,{})}addNewNotification(e){let o=this.notificationsSubject.value||[],i=[e,...o];this.notificationsSubject.next(i);let t=i.filter(s=>!s.is_read).length;this.unreadCountSubject.next(t),this.showNotificationToast(e),console.log("Added new notification to list:",e.title),console.log("Updated notifications count:",i.length),console.log("Unread count:",t)}showNotificationToast(e){console.log("\u{1F35E} Showing toast for notification:",e.title);let o=this.getToastSeverity(e.notification_type,e.priority),i=e.action_text||"View",t=!!e.action_url,s={severity:o,summary:e.title,detail:t?`${e.message} (Click to ${i.toLowerCase()})`:e.message,life:e.priority==="high"?8e3:5e3,sticky:e.priority==="high",closable:!0,data:{notification:e,hasAction:t}};console.log("\u{1F35E} Toast message details:",s),this.messageService.add(s),console.log("\u{1F35E} Toast message sent to MessageService")}getToastSeverity(e,o){if(o==="high")return e==="error"||e==="payment"?"error":"warn";switch(e){case"success":case"payment":return"success";case"error":return"error";case"warning":return"warn";case"system":case"job":case"proposal":case"contract":case"review":case"message":default:return"info"}}updateNotifications(e){let o=e||[];this.notificationsSubject.next(o);let i=o.filter(t=>!t.read_at).length;this.unreadCountSubject.next(i)}getCurrentNotifications(){return this.notificationsSubject.value}static \u0275fac=function(o){return new(o||r)(n(d),n(g),n(p))};static \u0275prov=b({token:r,factory:r.\u0275fac,providedIn:"root"})};export{f as a};
